#!/usr/bin/env node

/**
 * Script de verificaci√≥n final para el campo 'codigo' vs 'codigoSage'
 * Basado en el esquema real de MongoDB mostrado por el usuario
 */

console.log('üîç VERIFICACI√ìN CAMPO CODIGO vs CODIGOSAGE');
console.log('==========================================\n');

// Simular datos seg√∫n el esquema real de MongoDB
const productoEsquemaReal = {
  "_id": { "$oid": "688b978ff8f3b6d0fbf618c3" },
  "codigo": "4000004", // üîç ESTE ES EL CAMPO CORRECTO PARA SAGE50
  "codigoSage": "", // üîç ESTE EST√Å VAC√çO - NO USAR
  "nombre": "ALAS DE POLLO FRESCAS",
  "descripcion": "",
  "precio": 0,
  "activo": true,
  "__v": 0
};

console.log('üìã ESQUEMA REAL DE MONGODB:');
console.log('---------------------------');
console.log(`- codigo: "${productoEsquemaReal.codigo}" (CORRECTO para Sage50)`);
console.log(`- codigoSage: "${productoEsquemaReal.codigoSage}" (VAC√çO - no usar)`);
console.log(`- nombre: "${productoEsquemaReal.nombre}"`);

// Simular l√≠neas de pedido con el esquema correcto
const lineasPrueba = [
  {
    nombre: 'Producto con c√≥digo real',
    linea: {
      producto: productoEsquemaReal.nombre,
      codigo: productoEsquemaReal.codigo, // üîç USAR ESTE CAMPO
      codigoSage: productoEsquemaReal.codigoSage, // üîç ESTE EST√Å VAC√çO
      cantidad: 2,
      peso: 1.5,
      formato: 'kg',
      cantidadEnviada: 2,
      precioUnitario: 8.90
    }
  },
  {
    nombre: 'Producto sin c√≥digo (generar autom√°tico)',
    linea: {
      producto: 'Producto Sin C√≥digo',
      codigo: '', // üîç VAC√çO - debe generar autom√°tico
      codigoSage: '', // üîç TAMBI√âN VAC√çO
      cantidad: 1,
      peso: 0.5,
      formato: 'unidad',
      cantidadEnviada: 1,
      precioUnitario: 5.00
    }
  }
];

console.log('\nüß™ PRUEBAS DE MAPEO CORREGIDO:');
console.log('==============================\n');

function probarMapeoCorregido(escenario, index) {
  const { nombre, linea } = escenario;
  
  console.log(`üì¶ ${nombre}`);
  console.log('‚îÄ'.repeat(50));
  
  console.log('üì• DATOS DE ENTRADA:');
  console.log(`   - linea.codigo: "${linea.codigo}"`);
  console.log(`   - linea.codigoSage: "${linea.codigoSage}"`);
  console.log(`   - linea.producto: "${linea.producto}"`);
  
  // L√ìGICA ANTERIOR (INCORRECTA)
  const codigoAnterior = linea.codigoSage || `ART${String(index + 1).padStart(5, '0')}`;
  
  // L√ìGICA CORREGIDA (CORRECTA)
  const codigoCorregido = String(linea.codigo || `ART${String(index + 1).padStart(5, '0')}`);
  
  console.log('\nüîÑ COMPARACI√ìN:');
  console.log(`   ‚ùå L√ìGICA ANTERIOR: linea.codigoSage ‚Üí "${codigoAnterior}"`);
  console.log(`   ‚úÖ L√ìGICA CORREGIDA: linea.codigo ‚Üí "${codigoCorregido}"`);
  
  const esCorrecto = linea.codigo ? (codigoCorregido === linea.codigo) : codigoCorregido.startsWith('ART');
  const formatoCorrecto = typeof codigoCorregido === 'string';
  
  console.log('\nüéØ RESULTADO SAGE50:');
  console.log(`   - COLUMNA ARTICULO: "${codigoCorregido}"`);
  console.log(`   - FORMATO: ${typeof codigoCorregido} (string/alfanum√©rico)`);
  console.log(`   - ‚úÖ Mapeo correcto: ${esCorrecto ? 'S√ç' : 'NO'}`);
  console.log(`   - ‚úÖ Formato correcto: ${formatoCorrecto ? 'S√ç' : 'NO'}`);
  
  const verificacionCompleta = esCorrecto && formatoCorrecto;
  console.log(`\nüèÜ VERIFICACI√ìN: ${verificacionCompleta ? '‚úÖ CORRECTO' : '‚ùå ERROR'}`);
  console.log('\n' + '='.repeat(50) + '\n');
  
  return {
    codigoFinal: codigoCorregido,
    correcto: verificacionCompleta
  };
}

// Ejecutar pruebas
const resultados = lineasPrueba.map((escenario, index) => 
  probarMapeoCorregido(escenario, index)
);

// Resumen final
console.log('üìä RESUMEN CORRECCI√ìN:');
console.log('======================');
const todosCorrectos = resultados.every(r => r.correcto);
console.log(`üéØ Correcci√≥n exitosa: ${todosCorrectos ? '‚úÖ S√ç' : '‚ùå NO'}`);

console.log('\nüìã C√ìDIGOS GENERADOS CON CORRECCI√ìN:');
resultados.forEach((resultado, index) => {
  console.log(`   ${index + 1}. "${resultado.codigoFinal}"`);
});

console.log('\nüí° CAMBIO IMPLEMENTADO:');
console.log('- ANTES: linea.codigoSage (campo vac√≠o en MongoDB)');
console.log('- AHORA: linea.codigo (campo con datos reales)');
console.log('- FORMATO: String() para asegurar alfanum√©rico');

console.log('\nüöÄ ESQUEMA MONGODB CORRECTO:');
console.log('- Campo "codigo": Contiene el c√≥digo real para Sage50');
console.log('- Campo "codigoSage": Est√° vac√≠o - no usar');
console.log('- Mapeo: linea.codigo ‚Üí COLUMNA ARTICULO en Sage50');

if (todosCorrectos) {
  console.log('\nüéâ ¬°El mapeo est√° ahora corregido para usar el campo correcto!');
  console.log('‚úÖ Se usa "codigo" en lugar de "codigoSage"');
  console.log('‚úÖ Los productos reales aparecer√°n con su c√≥digo correcto');
} else {
  console.log('\n‚ùå Hay problemas en la correcci√≥n');
}
